upstream wsgi_server {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).

  server unix:{{ virtualenv_path }}/run/gunicorn.sock fail_timeout=0;
}

server {
    listen      80;
    server_name {{ nginx_server_name }};
    rewrite     ^/admin/ https://$server_name$request_uri? permanent;

    client_max_body_size 4G;

    access_log {{ nginx_access_log_file }};
    error_log {{ nginx_error_log_file }};

    location /static/ {
        alias   {{ nginx_static_dir }};
    }

    location /media/ {
        alias   {{ nginx_media_dir }};
    }

    location / {
        if (-f {{ virtualenv_path }}/maintenance_on.html) {
            return 503;
        }

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_read_timeout 300;

        # Try to serve static files from nginx, no point in making an
        # *application* server like Unicorn/Rainbows! serve static files.
        if (!-f $request_filename) {
            proxy_pass http://wsgi_server;
            break;
        }
    }

    # Error pages
    error_page 500 502 504 /500.html;
    location = /500.html {
        root {{ project_path }}/{{ application_name }}/templates/;
    }

    error_page 503 /maintenance_on.html;
    location = /maintenance_on.html {
        root {{ virtualenv_path }}/;
    }
}

server {
    listen              443;
    server_name         {{ nginx_server_name }};
	ssl on;
	ssl_certificate     {{ ssl_dest_dir }}/{{ application_name }}.crt;
	ssl_certificate_key {{ ssl_dest_dir }}/{{ application_name }}.key;

    client_max_body_size 4G;

    access_log {{ nginx_access_log_file }};
    error_log {{ nginx_error_log_file }};

    location /static/ {
        alias   {{ nginx_static_dir }};
    }

    location /media/ {
        alias   {{ nginx_media_dir }};
    }

    location / {
        if (-f {{ virtualenv_path }}/maintenance_on.html) {
            return 503;
        }

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_read_timeout 300;

        # Try to serve static files from nginx, no point in making an
        # *application* server like Unicorn/Rainbows! serve static files.
        if (!-f $request_filename) {
            proxy_pass http://wsgi_server;
            break;
        }
    }

    # Error pages
    error_page 500 502 504 /500.html;
    location = /500.html {
        root {{ project_path }}/{{ application_name }}/templates/;
    }

    error_page 503 /maintenance_on.html;
    location = /maintenance_on.html {
        root {{ virtualenv_path }}/;
    }
}


### DOMAIN REDIRECTS ###

# Redirect non-www top-level domain to www
server {
        listen 80;
        listen 443;
        server_name youtubeadl.com;
        return 301 http://www.youtubeadl.com$request_uri;
}